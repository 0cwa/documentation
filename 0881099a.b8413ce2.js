/*! For license information please see 0881099a.b8413ce2.js.LICENSE.txt */
(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{153:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return u})),a.d(t,"metadata",(function(){return p})),a.d(t,"rightToc",(function(){return b})),a.d(t,"default",(function(){return m}));var n=a(1),r=a(9),o=(a(0),a(288)),i=a(293),l=a(300),c=a(287),s=a(295),u={last_modified_on:"2020-06-08",$schema:"/.meta/.schemas/guides.json",title:"How to deploy a full-stack application composed of Hasura, PostgreSQL and Angular",description:"State of the art full-stack application deployment with Qovery",author_github:"https://github.com/evoxmusic",tags:["type: tutorial","framework: hasura","language: javascript","database: postgresql"],hide_pagination:!0},p={categories:[{name:"tutorial",title:"Tutorial",description:"Simple step-by-step tutorials.",permalink:"/guides/tutorial"}],coverLabel:"How to deploy a full-stack application composed of Hasura, PostgreSQL and Angular",description:"State of the art full-stack application deployment with Qovery",permalink:"/guides/tutorial/deploy-fullstack-application-composed-of-hasura-postgresql-angular",readingTime:"8 min read",source:"@site/guides/tutorial/deploy-fullstack-application-composed-of-hasura-postgresql-angular.md",tags:[{label:"type: tutorial",permalink:"/guides/tags/type-tutorial"},{label:"framework: hasura",permalink:"/guides/tags/framework-hasura"},{label:"language: javascript",permalink:"/guides/tags/language-javascript"},{label:"database: postgresql",permalink:"/guides/tags/database-postgresql"}],title:"How to deploy a full-stack application composed of Hasura, PostgreSQL and Angular",truncated:!1,prevItem:{title:"GraphQL API with Hasura",permalink:"/guides/tutorial/graphql-api-with-hasura"},nextItem:{title:"How to deploy Docker containers?",permalink:"/guides/tutorial/how-to-deploy-a-docker-container"}},b=[{value:"What is...",id:"what-is",children:[{value:"Hasura",id:"hasura",children:[]},{value:"PostgreSQL",id:"postgresql",children:[]},{value:"Angular",id:"angular",children:[]},{value:"Qovery",id:"qovery",children:[]},{value:"Full-stack application",id:"full-stack-application",children:[]}]},{value:"Hasura and PostgreSQL",id:"hasura-and-postgresql",children:[{value:"Quick deployment",id:"quick-deployment",children:[]},{value:"Under the hood",id:"under-the-hood",children:[]},{value:"Hasura web interface",id:"hasura-web-interface",children:[]}]},{value:"Angular",id:"angular-1",children:[{value:"GraphQL client",id:"graphql-client",children:[]},{value:"Quick deployment",id:"quick-deployment-1",children:[]},{value:"Under the hood",id:"under-the-hood-1",children:[]}]},{value:"Demo",id:"demo",children:[]},{value:"Beyond application deployment",id:"beyond-application-deployment",children:[]},{value:"Wrapping-up",id:"wrapping-up",children:[]}],d={rightToc:b};function m(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(n.a)({},d,a,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"In this article, I will show you how to deploy a full-stack application with Angular for the frontend, with Hasura and ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://www.postgresql.org"}),"PostgreSQL")," for the backend.\nIn the end, our application will be available within development and production environments, which makes it convenient to make code changes without putting down the production."),Object(o.b)("p",{align:"center"},Object(o.b)("img",{src:"/img/deploy-fullstack-application-composed-of-hasura-postgresql-angular/fullstack_with_background.jpg",alt:"Full-stack application Hasura, Angular and PostgreSQL with Qovery"})),Object(o.b)("p",null,"To show all of that, we will create a food application to find out the best Parisian restaurants."),Object(o.b)("h2",{id:"what-is"},"What is..."),Object(o.b)("h3",{id:"hasura"},"Hasura"),Object(o.b)("p",null,Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://hasura.io"}),"Hasura")," is a Turnkey ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://graphql.org"}),"GraphQL API")," backend - Meaning, you don't need to write any code to have a ready GraphQL API. Hasura stores all the data into a PostgreSQL database. What's interesting, is that Hasura manages the database for you, all the setup is done automatically. Hasura is extensible and lets you integrate with your other applications, through a well-designed hook system (Actions/Events)."),Object(o.b)("p",{align:"center"},Object(o.b)("img",{src:"/img/deploy-fullstack-application-composed-of-hasura-postgresql-angular/hasura-graphic.jpg",alt:"Hasura Graphic"})),Object(o.b)("h3",{id:"postgresql"},"PostgreSQL"),Object(o.b)("p",null,Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://www.postgresql.org"}),"PostgreSQL")," is one of the most famous open-source SQL database - very useful for storing application data efficiently. It will be used by Hasura behind the scene to store the data."),Object(o.b)("h3",{id:"angular"},"Angular"),Object(o.b)("p",null,"You may have already heard about ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://angular.io"}),"Angular"),". It is one of the most popular JavaScript frameworks, that developers use to build dynamic websites. We will use it to display the raw data from our GraphQL API made with Hasura."),Object(o.b)("h3",{id:"qovery"},"Qovery"),Object(o.b)("p",null,Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://www.qovery.com"}),"Qovery")," is a Container as a Service platform that helps developers deploy their applications in the Cloud in just a few seconds. Qovery is designed to deploy stateless and stateful applications - like ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/using-qovery/configuration/databases/"}),"databases"),", ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/using-qovery/configuration/brokers/"}),"brokers")," and ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/using-qovery/configuration/storage/"}),"storage"),". And all of this, on any Cloud providers; More specifically AWS (Amazon Web Services), GCP (Google Cloud Platform), and Azure (Microsoft Cloud)."),Object(o.b)("p",{align:"center"},Object(o.b)("img",{src:"/img/deploy-fullstack-application-composed-of-hasura-postgresql-angular/qovery_with_background.jpg",alt:"Qovery integrated with gitlab, github and bitbucket. And integrated with the Cloud providers"})),Object(o.b)("h3",{id:"full-stack-application"},"Full-stack application"),Object(o.b)("p",null,'A full-stack application refers to multiple applications working all-together as a single one. From frontend (customer or user-facing) to the backend (the "behind-the-scenes" technology such as databases and internal architecture) and the software code that connects the two (middleware). In our case, our backend is Hasura, our database PostgreSQL and our frontend Angular. From the application user point of view, this is seen as a single application.'),Object(o.b)("h1",{id:"tutorial"},"Tutorial"),Object(o.b)(s.a,{mdxType:"Assumptions"},Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"You host your code on ",Object(o.b)("a",Object(n.a)({parentName:"li"},{href:"https://github.com"}),"Github")," or ",Object(o.b)("a",Object(n.a)({parentName:"li"},{href:"https://gitlab.com"}),"Gitlab")),Object(o.b)("li",{parentName:"ul"},"You have signed up to ",Object(o.b)("a",Object(n.a)({parentName:"li"},{href:"https://start.qovery.com"}),"Qovery")))),Object(o.b)("h2",{id:"hasura-and-postgresql"},"Hasura and PostgreSQL"),Object(o.b)("h3",{id:"quick-deployment"},"Quick deployment"),Object(o.b)(l.a,{headingDepth:3,mdxType:"Steps"},Object(o.b)("ol",null,Object(o.b)("li",null,Object(o.b)("p",null,"The first thing to do is to create a directory and move into it"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"# create a directory and move into it\n$ mkdir my-hasura-backend && cd my-hasura-backend\n")),Object(o.b)("p",null,"Connect to your Qovery account:"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"# Github, Bitbucket, Gitlab seamless authentication\n$ qovery auth\nOpening your browser, waiting for your authentication...\nAuthentication successful!\n")),Object(o.b)(c.a,{type:"info",mdxType:"Alert"},Object(o.b)("p",null,"With Qovery, you don't need to have a Cloud account to deploy on the Cloud provider and the region of your choice.")),Object(o.b)("p",null,"Then, we need to generate the files required to make Hasura running on Qovery"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"# Generate the .qovery.yml and the Dockerfile from the official Hasura template\n$ qovery init -t hasura\n"))),Object(o.b)("li",null,Object(o.b)("p",null,"Finally, we commit and push our changes to deploy Hasura with PostgreSQL (Yes PostgreSQL is handled by Qovery ;))"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),'# Git commit and push your code\n$ git add --all\n$ git commit -m "first commit"\n$ git push -u origin master\n\n# Your Hasura application is live!\n'))),Object(o.b)("li",null,Object(o.b)("p",null,"Check your deployment status with:"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"$ qovery status\n"))))),Object(o.b)("p",null,"That's it, our Hasura backend and PostgreSQL are deployed and ready to be used."),Object(o.b)("h3",{id:"under-the-hood"},"Under the hood"),Object(o.b)("p",null,"The command ",Object(o.b)("inlineCode",{parentName:"p"},"qovery init -t hasura")," generates 3 mandatory files to deploy Hasura and PostgreSQL with the right configuration."),Object(o.b)("p",null,"The ",Object(o.b)("inlineCode",{parentName:"p"},".qovery.yml")," file - which is the description file indicating what dependencies your application needs to run. In our case a PostgreSQL database, but we also added two custom domains for the master and dev environments."),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-yaml",metastring:'title=".qovery.yml"',title:'".qovery.yml"'}),"application:\n  name: hasura\n  project: MyProjectName\n  cloud_region: aws/us-east-2\ndatabases:\n- type: postgresql\n  version: 11\n  name: my-psql-db\nrouters:\n- name: main\n  custom_domains:\n  - branch: master\n    domain: api.tld.com\n  - branch: dev\n    domain: api-dev.tld.com\n  routes:\n  - application_name: hasura\n    paths:\n    - /*\n")),Object(o.b)("p",null,"The ",Object(o.b)("inlineCode",{parentName:"p"},"Dockerfile")," file - to build and run Hasura from the Docker image provided by the Hasura Core team."),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash",metastring:'title="Dockerfile"',title:'"Dockerfile"'}),"FROM hasura/graphql-engine:v1.2.2\nEXPOSE 8080\n")),Object(o.b)("p",null,"Finally, the ",Object(o.b)("inlineCode",{parentName:"p"},".env")," (dot env) file - to link Hasura to the database"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash",metastring:'title=".env"',title:'".env"'}),"HASURA_GRAPHQL_DATABASE_URL=$QOVERY_DATABASE_MY_POSTGRESQL_DATABASE_CONNECTION_URI\n")),Object(o.b)("h3",{id:"hasura-web-interface"},"Hasura web interface"),Object(o.b)("p",null,"Once the Hasura application and the PostgreSQL database running, we can get access to the Hasura web interface to set-up our GraphQL API."),Object(o.b)("p",{align:"center"},Object(o.b)("img",{src:"/img/deploy-fullstack-application-composed-of-hasura-postgresql-angular/hasura_web_interface.png",alt:"Hasura web interface to configure the data model"})),Object(o.b)("h2",{id:"angular-1"},"Angular"),Object(o.b)("h3",{id:"graphql-client"},"GraphQL client"),Object(o.b)(s.a,{mdxType:"Assumptions"},Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"You have installed the ",Object(o.b)("a",Object(n.a)({parentName:"li"},{href:"https://cli.angular.io"}),"angular CLI")))),Object(o.b)("p",null,"Ok, now let's deploy our Angular application. We need to use a GraphQL client to connect to our server. We'll use ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://www.apollographql.com"}),"Apollo")," by running in our shell:"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"$ ng add apollo-angular\n")),Object(o.b)("p",null,"Then, we link the client to our server by modifying the ",Object(o.b)("em",{parentName:"p"},"uri")," variable into ",Object(o.b)("inlineCode",{parentName:"p"},"src/app/graphql.module.ts"),":"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-javascript",metastring:'title="src/app/graphql.module.ts"',title:'"src/app/graphql.module.ts"'}),'//...\nconst uri = "https://api.tld.com";\n//...\n')),Object(o.b)("p",null,"You can find the correct URL to use by using ",Object(o.b)("inlineCode",{parentName:"p"},"qovery status")," - ",Object(o.b)("em",{parentName:"p"},"ENDPOINTS")),Object(o.b)("p",null,"Finally, we can now fetch data from our GraphQL backend with the following code:"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-javascript"}),'import { Apollo } from "apollo-angular";\n//...\nexport class HomeComponent implements OnInit {\n    //...\n    ngOnInit() {\n      const gquery = "..."; // graphql query\n      this.apollo.query<any>({query: gquery}).subscribe(({ data, loading }) => {\n          // response with the data...\n      });\n    }\n    //...\n}\n')),Object(o.b)("h3",{id:"quick-deployment-1"},"Quick deployment"),Object(o.b)(l.a,{headingDepth:3,mdxType:"Steps"},Object(o.b)("ol",null,Object(o.b)("li",null,Object(o.b)("p",null,"Like we did for Hasura, we have to create the ",Object(o.b)("inlineCode",{parentName:"p"},".qovery.yml")," and the ",Object(o.b)("inlineCode",{parentName:"p"},"Dockerfile")," files"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"# move into my angular project\n$ cd my-angular-frontend\n\n# Generate the .qovery.yml\n$ qovery init\n"))),Object(o.b)("li",null,Object(o.b)("p",null,"Then, we commit and push our changes to deploy Angular"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),'# Git commit and push your code\n$ git add --all\n$ git commit -m "first commit"\n$ git push -u origin master\n\n# Your Angular application is live!\n'))),Object(o.b)("li",null,Object(o.b)("p",null,"Check your deployment status with:"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"$ qovery status\n"))))),Object(o.b)("h3",{id:"under-the-hood-1"},"Under the hood"),Object(o.b)("p",null,"Two files at the root of our project are mandatories to deploy our Angular application - the ",Object(o.b)("inlineCode",{parentName:"p"},".qovery.yml")," and the ",Object(o.b)("inlineCode",{parentName:"p"},"Dockerfile")," files."),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-yaml",metastring:'title=".qovery.yml"',title:'".qovery.yml"'}),"application:\n  name: angular\n  project: MyProjectName\n  cloud_region: aws/us-east-2\nrouters:\n- name: frontend\n  custom_domains:\n  - branch: master\n    domain: tld.com\n  routes:\n  - application_name: frontend\n    paths:\n    - /*\n")),Object(o.b)(c.a,{type:"info",mdxType:"Alert"},Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"project")," is the matching key to get the Hasura, PostgreSQL and Angular within the same project.")),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash",metastring:'title="Dockerfile"',title:'"Dockerfile"'}),"### STAGE 1: Build ###\nFROM node:14.3-alpine AS build\nWORKDIR /usr/src/app\nCOPY package.json package-lock.json ./\nRUN npm install\nCOPY . .\nRUN npm run build\n\n### STAGE 2: Run ###\nFROM nginx:1.19-alpine\nEXPOSE 80\nCOPY --from=build /usr/src/app/dist/my-angular-app /usr/share/nginx/html\n")),Object(o.b)("h2",{id:"demo"},"Demo"),Object(o.b)("p",null,"Now, let's look at the final result..."),Object(o.b)("div",{class:"video-container"},Object(o.b)("p",{align:"center"},Object(o.b)("iframe",{width:"800",height:"600",src:"https://www.youtube.com/embed/nmtLfzSDlPM",frameborder:"0",allow:"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture",allowfullscreen:!0}))),Object(o.b)("h2",{id:"beyond-application-deployment"},"Beyond application deployment"),Object(o.b)("p",null,"Application deployment is one part of what Qovery provides. Qovery helps development teams to better collaborate altogether by cloning ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/main-concepts/environment/"}),"environment")," and creating ephemeral environments on Pull Requests. Plus, deploying on its own Cloud account is available for business plans - and last, but not least, a ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/using-qovery/interface/web-interface/"}),"web interface")," will be available very soon."),Object(o.b)("h2",{id:"wrapping-up"},"Wrapping-up"),Object(o.b)("p",null,"In this tutorial, we saw how to deploy a full-stack application composed of a frontend, backend, and a database. We saw how Qovery perfectly fits Hasura and make it publicly available in a couple of seconds. So ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://start.qovery.com"}),"join us on Qovery")," to deploy your next full-stack project :)"),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Resources")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(n.a)({parentName:"li"},{href:"https://angular.io/"}),"Angular")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(n.a)({parentName:"li"},{href:"https://hasura.io/"}),"Hasura")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(n.a)({parentName:"li"},{href:"https://www.postgresql.org/"}),"PostgreSQL")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(n.a)({parentName:"li"},{href:"https://material.angular.io/"}),"Angular - Material Design"))),Object(o.b)(i.a,{to:"/guides/tutorial/",mdxType:"Jump"},"Tutorial"))}m.isMDXComponent=!0},286:function(e,t,a){var n;!function(){"use strict";var a={}.hasOwnProperty;function r(){for(var e=[],t=0;t<arguments.length;t++){var n=arguments[t];if(n){var o=typeof n;if("string"===o||"number"===o)e.push(n);else if(Array.isArray(n)&&n.length){var i=r.apply(null,n);i&&e.push(i)}else if("object"===o)for(var l in n)a.call(n,l)&&n[l]&&e.push(l)}}return e.join(" ")}e.exports?(r.default=r,e.exports=r):void 0===(n=function(){return r}.apply(t,[]))||(e.exports=n)}()},287:function(e,t,a){"use strict";a(292);var n=a(0),r=a.n(n),o=a(286),i=a.n(o);a(131);t.a=function(e){var t=e.children,a=e.classNames,n=e.fill,o=e.icon,l=e.type,c=null;switch(l){case"danger":c="alert-triangle";break;case"success":c="check-circle";break;case"warning":c="alert-triangle";break;default:c="info"}return r.a.createElement("div",{className:i()(a,"alert","alert--"+l,{"alert--fill":n,"alert--icon":!1!==o}),role:"alert"},!1!==o&&r.a.createElement("i",{className:i()("feather","icon-"+(o||c))}),t)}},288:function(e,t,a){"use strict";a.d(t,"a",(function(){return p})),a.d(t,"b",(function(){return m}));var n=a(0),r=a.n(n);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function c(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=r.a.createContext({}),u=function(e){var t=r.a.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):l({},t,{},e)),a},p=function(e){var t=u(e.components);return r.a.createElement(s.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},d=Object(n.forwardRef)((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,i=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),p=u(a),d=n,m=p["".concat(i,".").concat(d)]||p[d]||b[d]||o;return a?r.a.createElement(m,l({ref:t},s,{components:a})):r.a.createElement(m,l({ref:t},s))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,i=new Array(o);i[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:n,i[1]=l;for(var s=2;s<o;s++)i[s]=a[s];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,a)}d.displayName="MDXCreateElement"},289:function(e,t,a){"use strict";var n=a(1),r=a(0),o=a.n(r),i=a(39),l=a(294),c=a(28),s=a.n(c);t.a=function(e){var t,a=e.to,c=e.href,u=a||c,p=Object(l.a)(u),b=Object(r.useRef)(!1),d=s.a.canUseIntersectionObserver;return Object(r.useEffect)((function(){return!d&&p&&window.docusaurus.prefetch(u),function(){d&&t&&t.disconnect()}}),[u,d,p]),u&&p?o.a.createElement(i.b,Object(n.a)({},e,{onMouseEnter:function(){b.current||(window.docusaurus.preload(u),b.current=!0)},innerRef:function(e){var a,n;d&&e&&p&&(a=e,n=function(){window.docusaurus.prefetch(u)},(t=new window.IntersectionObserver((function(e){e.forEach((function(e){a===e.target&&(e.isIntersecting||e.intersectionRatio>0)&&(t.unobserve(a),t.disconnect(),n())}))}))).observe(a))},to:u})):o.a.createElement("a",Object(n.a)({},e,{href:u}))}},290:function(e,t,a){var n=a(24).f,r=Function.prototype,o=/^\s*function ([^ (]*)/;"name"in r||a(10)&&n(r,"name",{configurable:!0,get:function(){try{return(""+this).match(o)[1]}catch(e){return""}}})},292:function(e,t,a){var n=a(12);n(n.P,"Array",{fill:a(297)}),a(75)("fill")},293:function(e,t,a){"use strict";var n=a(0),r=a.n(n),o=a(289),i=a(286),l=a.n(i);a(132);t.a=function(e){var t=e.children,a=e.className,n=e.badge,i=e.leftIcon,c=e.rightIcon,s=e.size,u=e.target,p=e.to,b=l()("jump-to","jump-to--"+s,a),d=r.a.createElement("div",{className:"jump-to--inner"},r.a.createElement("div",{className:"jump-to--inner-2"},i&&r.a.createElement("div",{className:"jump-to--left"},r.a.createElement("i",{className:"feather icon-"+i})),r.a.createElement("div",{className:"jump-to--main"},n?r.a.createElement("span",{className:"badge badge--primary badge--right"},n):"",t),r.a.createElement("div",{className:"jump-to--right"},r.a.createElement("i",{className:"feather icon-"+(c||"chevron-right")+" arrow"}))));return u?r.a.createElement("a",{href:p,target:u,className:b},d):r.a.createElement(o.a,{to:p,className:b},d)}},294:function(e,t,a){"use strict";function n(e){return!1===/^(https?:|\/\/)/.test(e)}a.d(t,"a",(function(){return n}))},295:function(e,t,a){"use strict";a(290);var n=a(0),r=a.n(n),o=a(287);t.a=function(e){var t=e.children,a=e.name;return r.a.createElement(o.a,{type:"info",fill:!0,icon:!1,rounded:!0,className:"list--icons list--icons--arrow list--tight list--indent margin-bottom--lg"},r.a.createElement("p",{class:"text--lg margin-bottom--sm",style:{marginTop:"-0.25em"}},"Before you begin, this ",a||"page"," assumes the following:"),t)}},296:function(e,t,a){"use strict";var n=a(302),r=a(53);function o(e,t){return t.encode?t.strict?n(e):encodeURIComponent(e):e}t.extract=function(e){return e.split("?")[1]||""},t.parse=function(e,t){var a=function(e){var t;switch(e.arrayFormat){case"index":return function(e,a,n){t=/\[(\d*)\]$/.exec(e),e=e.replace(/\[\d*\]$/,""),t?(void 0===n[e]&&(n[e]={}),n[e][t[1]]=a):n[e]=a};case"bracket":return function(e,a,n){t=/(\[\])$/.exec(e),e=e.replace(/\[\]$/,""),t?void 0!==n[e]?n[e]=[].concat(n[e],a):n[e]=[a]:n[e]=a};default:return function(e,t,a){void 0!==a[e]?a[e]=[].concat(a[e],t):a[e]=t}}}(t=r({arrayFormat:"none"},t)),n=Object.create(null);return"string"!=typeof e?n:(e=e.trim().replace(/^(\?|#|&)/,""))?(e.split("&").forEach((function(e){var t=e.replace(/\+/g," ").split("="),r=t.shift(),o=t.length>0?t.join("="):void 0;o=void 0===o?null:decodeURIComponent(o),a(decodeURIComponent(r),o,n)})),Object.keys(n).sort().reduce((function(e,t){var a=n[t];return Boolean(a)&&"object"==typeof a&&!Array.isArray(a)?e[t]=function e(t){return Array.isArray(t)?t.sort():"object"==typeof t?e(Object.keys(t)).sort((function(e,t){return Number(e)-Number(t)})).map((function(e){return t[e]})):t}(a):e[t]=a,e}),Object.create(null))):n},t.stringify=function(e,t){var a=function(e){switch(e.arrayFormat){case"index":return function(t,a,n){return null===a?[o(t,e),"[",n,"]"].join(""):[o(t,e),"[",o(n,e),"]=",o(a,e)].join("")};case"bracket":return function(t,a){return null===a?o(t,e):[o(t,e),"[]=",o(a,e)].join("")};default:return function(t,a){return null===a?o(t,e):[o(t,e),"=",o(a,e)].join("")}}}(t=r({encode:!0,strict:!0,arrayFormat:"none"},t));return e?Object.keys(e).sort().map((function(n){var r=e[n];if(void 0===r)return"";if(null===r)return o(n,t);if(Array.isArray(r)){var i=[];return r.slice().forEach((function(e){void 0!==e&&i.push(a(n,e,i.length))})),i.join("&")}return o(n,t)+"="+o(r,t)})).filter((function(e){return e.length>0})).join("&"):""}},297:function(e,t,a){"use strict";var n=a(26),r=a(76),o=a(25);e.exports=function(e){for(var t=n(this),a=o(t.length),i=arguments.length,l=r(i>1?arguments[1]:void 0,a),c=i>2?arguments[2]:void 0,s=void 0===c?a:r(c,a);s>l;)t[l++]=e;return t}},300:function(e,t,a){"use strict";var n=a(0),r=a.n(n),o=(a(286),a(296)),i=a.n(o);a(133);t.a=function(e){var t=e.children,a=e.headingDepth,o=e.hideFeedbackQuestion,l="undefined"!=typeof window?window.location:null,c={title:"Tutorial on "+l+" failed",body:"The tutorial on:\n\n"+l+"\n\nHere's what went wrong:\n\n\x3c!-- Insert command output and details. Thank you for reporting! :) --\x3e"},s="https://github.com/qovery/documentation/issues/new?"+i.a.stringify(c),u=Object(n.useState)(null),p=u[0],b=u[1];return r.a.createElement("div",{className:"steps steps--h"+a},t,!o&&!p&&r.a.createElement("div",{className:"steps--feedback"},"How was it? Did this tutorial work?\xa0\xa0",r.a.createElement("span",{className:"button button--sm button--primary",onClick:function(){return b("yes")}},"Yes"),"\xa0\xa0",r.a.createElement("a",{href:s,target:"_blank",className:"button button--sm button--primary"},"No")),"yes"==p&&r.a.createElement("div",{className:"steps--feedback steps--feedback--success"},"Thanks! If you're enjoying Qovery please consider ",r.a.createElement("a",{href:"https://github.com/qovery/documentation/",target:"_blank"},"starring our Github repo"),"."))}},302:function(e,t,a){"use strict";e.exports=function(e){return encodeURIComponent(e).replace(/[!'()*]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}))}}}]);