/*! For license information please see 1830a3c1.bc17e546.js.LICENSE.txt */
(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{174:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return s})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return m}));var a=n(1),r=n(9),i=(n(0),n(349)),o=n(354),s=(n(353),{last_modified_on:"2020-09-24",$schema:"/.meta/.schemas/guides.json",title:"helm-freeze - manage Helm Charts and Repositories with ease",description:"state-of-the-art way of managing Helm resources",author_github:"https://github.com/deimosfr",tags:["type: engineering","technology: kubernetes"],hide_pagination:!0}),c={categories:[{name:"engineering",title:"Engineering",description:"We share our engineering learning with all of you.",permalink:"/guides/engineering"}],coverLabel:"helm-freeze - manage Helm Charts and Repositories with ease",description:"state-of-the-art way of managing Helm resources",permalink:"/guides/engineering/helm-freeze-manage-helm-charts-with-ease",readingTime:"4 min read",source:"@site/guides/engineering/helm-freeze-manage-helm-charts-with-ease.md",tags:[{label:"type: engineering",permalink:"/guides/tags/type-engineering"},{label:"technology: kubernetes",permalink:"/guides/tags/technology-kubernetes"}],title:"helm-freeze - manage Helm Charts and Repositories with ease",truncated:!1,prevItem:{title:"GraphQL API with Hasura",permalink:"/guides/tutorial/graphql-api-with-hasura"},nextItem:{title:"How to create and deploy a Discord bot in Python",permalink:"/guides/tutorial/create-and-deploy-python-discord-bot"}},l=[{value:"The pain of managing helm charts",id:"the-pain-of-managing-helm-charts",children:[]},{value:"Helm-freeze to the rescue",id:"helm-freeze-to-the-rescue",children:[]},{value:"Helm-freeze in action",id:"helm-freeze-in-action",children:[]},{value:"Conclusion",id:"conclusion",children:[]}],u={rightToc:l};function m(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},u,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"Since the beginning of Kubernetes, a lot of different tools emerged to manage Kubernetes deployments. They all propose their own mindset, workflow, and usage."),Object(i.b)("p",null,"Here is a small list of the most well-known:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"https://github.com/helm/helm"}),"Helm")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"https://github.com/kubernetes-sigs/kustomize"}),"Kustomize")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"https://github.com/GoogleContainerTools/skaffold"}),"Skafold")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"https://argoproj.github.io/argo-cd/"}),"ArgoCD"))),Object(i.b)("p",null,"Dozens of solutions exist, they all have their pros and cons, but Helm and Kustomize look to be the two favorites chosen by the community."),Object(i.b)("p",null,"Kustomize has been integrated directly into kubectl binary and allows to directly override some part of existing Kubernetes YAML files since 1.14 version. Helm allows creating \u201cCharts\u201d (a set of Kubernetes YAML template files) to ease the deployment process and easily share them with community members with Helm Hub (",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://hub.helm.sh/"}),"https://hub.helm.sh/"),")."),Object(i.b)("h2",{id:"the-pain-of-managing-helm-charts"},"The pain of managing helm charts"),Object(i.b)("p",null,"More than 1k Helm repositories and charts exist. Such a large amount of Helm configuration files is painful to maintain for a DevOps team. More especially when this team starts to use a couple of them.  In my previous experiences I saw many ways of managing Helm Charts. Often as git submodules, coping the whole chart content in a git repo, or having a custom script to manage them."),Object(i.b)("p",null,"In any case, a tool was missing to maintain them easily. With Helm, you can manage dependencies in a given chart, but not pin the chart version you want to use. Like what we can do in most of the programming languages. Here is an example in Rust with Cargo (the dependency manager):"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-ini"}),'[dependencies]\nchrono = "0.4.11"\ncmd_lib = "0.7.8"\ngit2 = "0.13.8"\nwalkdir = "2.3.1"\nitertools = "0.9.0"\nbase64 = "0.12.3"\n...\n')),Object(i.b)("p",null,"E.g: here we are using a lib called \u201cbase64\u201d in \u201c0.12.3\u201d version. Everything is explicit and no surprises can happen."),Object(i.b)("p",null,"Plus, combined with a VCS like Git, it helps to track changes over time. Which is convenient in case of non-working/not expected (delete as appropriate) changes."),Object(i.b)("h2",{id:"helm-freeze-to-the-rescue"},"Helm-freeze to the rescue"),Object(i.b)("p",null,"I created ",Object(i.b)("inlineCode",{parentName:"p"},"helm-freeze")," to seamlessly manage Helm Charts and repositories."),Object(i.b)("p",null,"The project is Open Source for anyone who is experiencing the same problem as us. Feel free to contribute."),Object(i.b)("h2",{id:"helm-freeze-in-action"},"Helm-freeze in action"),Object(i.b)("p",null,"You can install ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/Qovery/helm-freeze"}),"helm-freeze")," with Brew (MacOSx), with Yay (Arch Linux), or directly downloading the binary on ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/Qovery/helm-freeze/releases"}),"GitHub"),"."),Object(i.b)("p",null,"Then, to initialize it and create its configuration file in the repository you want your charts to be stored in, run init:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"helm-freeze init\n")),Object(i.b)("p",null,"The configuration file will look like this:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),"charts:\n  - name: prometheus-operator\n    version: 9.3.1\n\nrepos:\n  - name: stable\n    url: https://kubernetes-charts.storage.googleapis.com\n\ndestinations:\n  - name: default\n    path: ./\n")),Object(i.b)("p",null,"In three points:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"charts: list of charts with their associated version"),Object(i.b)("li",{parentName:"ul"},"repos: name of repos, and their URL (stable is the default one)"),Object(i.b)("li",{parentName:"ul"},"destination: the path where you want your charts to be stored")),Object(i.b)("p",null,"Now see a complete configuration example:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),'charts:\n    # Chart name\n  - name: cert-manager\n    # Chart version\n    version: v0.16.0\n    # The repo to use (declared below in the repos section)\n    repo_name: jetstack\n    # No destinations is declared, the default one will be used\n    comment: "You can add comments"\n  - name: fluent-bit\n    repo_name: lifen\n    version: 2.8.0\n    # If you temporary want to stop syncing a specific chart\n    no_sync: true\n  - name: nginx-ingress\n    # No repo_name is specified, stable will be used\n    version: 1.35.0\n    # Change the destination to another one (declared in destinations section)\n    dest: custom\n\nrepos:\n    # Stable is the default one\n  - name: stable\n    url: https://kubernetes-charts.storage.googleapis.com\n  - name: jetstack\n    url: https://charts.jetstack.io\n  - name: lifen\n    url: https://honestica.github.io/lifen-charts\n\ndestinations:\n  - name: default\n    path: /my/absolute/path\n  - name: custom\n    path: ./my/relative/path\n')),Object(i.b)("p",null,"The remaining command to sync locally the charts is:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"helm-freeze sync\n")),Object(i.b)("p",null,"That\u2019s it. You can now commit everything to keep track of changes. To get a new version of a chart, update the version number and run again ",Object(i.b)("inlineCode",{parentName:"p"},"helm-freeze sync"),"."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),"charts:\n  - name: cert-manager\n    version: v0.16.1\n")),Object(i.b)("h2",{id:"conclusion"},"Conclusion"),Object(i.b)("p",null,"Managing charts is now easy with ",Object(i.b)("inlineCode",{parentName:"p"},"helm-freeze"),". In our day to day job, it solves several issues we encountered in the past:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Follow GitOps philosophy"),Object(i.b)("li",{parentName:"ul"},"Know exactly what has changed between 2 charts version with a git diff"),Object(i.b)("li",{parentName:"ul"},"One place to manage them all"),Object(i.b)("li",{parentName:"ul"},"Works well with monorepo"),Object(i.b)("li",{parentName:"ul"},"Declarative configuration (YAML file)")),Object(i.b)("p",null,Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/Qovery/helm-freeze"}),"See helm-freeze on Github")),Object(i.b)("p",null,"Hope it will help you as it helps us at ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://www.qovery.com"}),"Qovery")),Object(i.b)(o.a,{to:"/guides/engineering/",mdxType:"Jump"},"Engineering"))}m.isMDXComponent=!0},347:function(e,t,n){var a;!function(){"use strict";var n={}.hasOwnProperty;function r(){for(var e=[],t=0;t<arguments.length;t++){var a=arguments[t];if(a){var i=typeof a;if("string"===i||"number"===i)e.push(a);else if(Array.isArray(a)&&a.length){var o=r.apply(null,a);o&&e.push(o)}else if("object"===i)for(var s in a)n.call(a,s)&&a[s]&&e.push(s)}}return e.join(" ")}e.exports?(r.default=r,e.exports=r):void 0===(a=function(){return r}.apply(t,[]))||(e.exports=a)}()},348:function(e,t,n){"use strict";n(352);var a=n(0),r=n.n(a),i=n(347),o=n.n(i);n(132);t.a=function(e){var t=e.children,n=e.classNames,a=e.fill,i=e.icon,s=e.type,c=null;switch(s){case"danger":c="alert-triangle";break;case"success":c="check-circle";break;case"warning":c="alert-triangle";break;default:c="info"}return r.a.createElement("div",{className:o()(n,"alert","alert--"+s,{"alert--fill":a,"alert--icon":!1!==i}),role:"alert"},!1!==i&&r.a.createElement("i",{className:o()("feather","icon-"+(i||c))}),t)}},349:function(e,t,n){"use strict";n.d(t,"a",(function(){return m})),n.d(t,"b",(function(){return b}));var a=n(0),r=n.n(a);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=r.a.createContext({}),u=function(e){var t=r.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s({},t,{},e)),n},m=function(e){var t=u(e.components);return r.a.createElement(l.Provider,{value:t},e.children)},h={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},p=Object(a.forwardRef)((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),m=u(n),p=a,b=m["".concat(o,".").concat(p)]||m[p]||h[p]||i;return n?r.a.createElement(b,s({ref:t},l,{components:n})):r.a.createElement(b,s({ref:t},l))}));function b(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=p;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var l=2;l<i;l++)o[l]=n[l];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},350:function(e,t,n){"use strict";var a=n(1),r=n(0),i=n.n(r),o=n(39),s=n(355),c=n(19),l=n.n(c);t.a=function(e){var t,n=e.to,c=e.href,u=n||c,m=Object(s.a)(u),h=Object(r.useRef)(!1),p=l.a.canUseIntersectionObserver;return Object(r.useEffect)((function(){return!p&&m&&window.docusaurus.prefetch(u),function(){p&&t&&t.disconnect()}}),[u,p,m]),u&&m?i.a.createElement(o.b,Object(a.a)({},e,{onMouseEnter:function(){h.current||(window.docusaurus.preload(u),h.current=!0)},innerRef:function(e){var n,a;p&&e&&m&&(n=e,a=function(){window.docusaurus.prefetch(u)},(t=new window.IntersectionObserver((function(e){e.forEach((function(e){n===e.target&&(e.isIntersecting||e.intersectionRatio>0)&&(t.unobserve(n),t.disconnect(),a())}))}))).observe(n))},to:u})):i.a.createElement("a",Object(a.a)({},e,{href:u}))}},351:function(e,t,n){var a=n(25).f,r=Function.prototype,i=/^\s*function ([^ (]*)/;"name"in r||n(10)&&a(r,"name",{configurable:!0,get:function(){try{return(""+this).match(i)[1]}catch(e){return""}}})},352:function(e,t,n){var a=n(12);a(a.P,"Array",{fill:n(357)}),n(75)("fill")},353:function(e,t,n){"use strict";n(351);var a=n(0),r=n.n(a),i=n(348);t.a=function(e){var t=e.children,n=e.name;return r.a.createElement(i.a,{type:"info",fill:!0,icon:!1,rounded:!0,className:"list--icons list--icons--arrow list--tight list--indent margin-bottom--lg"},r.a.createElement("p",{class:"text--lg margin-bottom--sm",style:{marginTop:"-0.25em"}},"Before you begin, this ",n||"page"," assumes the following:"),t)}},354:function(e,t,n){"use strict";var a=n(0),r=n.n(a),i=n(350),o=n(347),s=n.n(o);n(133);t.a=function(e){var t=e.children,n=e.className,a=e.badge,o=e.leftIcon,c=e.rightIcon,l=e.size,u=e.target,m=e.to,h=s()("jump-to","jump-to--"+l,n),p=r.a.createElement("div",{className:"jump-to--inner"},r.a.createElement("div",{className:"jump-to--inner-2"},o&&r.a.createElement("div",{className:"jump-to--left"},r.a.createElement("i",{className:"feather icon-"+o})),r.a.createElement("div",{className:"jump-to--main"},a?r.a.createElement("span",{className:"badge badge--primary badge--right"},a):"",t),r.a.createElement("div",{className:"jump-to--right"},r.a.createElement("i",{className:"feather icon-"+(c||"chevron-right")+" arrow"}))));return u?r.a.createElement("a",{href:m,target:u,className:h},p):r.a.createElement(i.a,{to:m,className:h},p)}},355:function(e,t,n){"use strict";function a(e){return!1===/^(https?:|\/\/)/.test(e)}n.d(t,"a",(function(){return a}))},357:function(e,t,n){"use strict";var a=n(27),r=n(76),i=n(26);e.exports=function(e){for(var t=a(this),n=i(t.length),o=arguments.length,s=r(o>1?arguments[1]:void 0,n),c=o>2?arguments[2]:void 0,l=void 0===c?n:r(c,n);l>s;)t[s++]=e;return t}}}]);