(window.webpackJsonp=window.webpackJsonp||[]).push([[71],{220:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return s}));var a=n(1),r=n(9),o=(n(0),n(252)),i={last_modified_on:"2020-04-21",title:"Application",description:"Understand the concept of Qovery application"},c={id:"main-concepts/application",title:"Application",description:"Understand the concept of Qovery application",source:"@site/docs/main-concepts/application.md",permalink:"/docs/main-concepts/application",editUrl:"https://github.com/Qovery/documentation/edit/master/website/docs/main-concepts/application.md",sidebar:"docs",previous:{title:"Main Concepts",permalink:"/docs/main-concepts"},next:{title:"Project",permalink:"/docs/main-concepts/project"}},l=[{value:"Git Driven Infrastructure (GitOps)",id:"git-driven-infrastructure-gitops",children:[]},{value:"Rich selection of integrated services",id:"rich-selection-of-integrated-services",children:[]},{value:"All languages and frameworks supported",id:"all-languages-and-frameworks-supported",children:[]},{value:"Consistent development environment",id:"consistent-development-environment",children:[]}],p={rightToc:l};function s(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(a.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"In our terminology, ",Object(o.b)("strong",{parentName:"p"},"application")," is a program versioned by Git that is run and managed by Qovery.\nAn application repository should contain a ",Object(o.b)("inlineCode",{parentName:"p"},"Dockerfile")," - Qovery uses ",Object(o.b)("strong",{parentName:"p"},"Docker")," container runtime to run applications.\nThe last thing - to deploy applications to Qovery, you need to add a Qovery configuration. Here is the minimal configuration file:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),'application:\n  name: myapp\n  project: test\n  region: "aws/us-west-2" # refer to available available\n')),Object(o.b)("p",null,"TODO - IMAGE - GIT REPO WITH DOCKERFILE, CONFIG AND SRC FOLDER"),Object(o.b)("p",null,"After you commit and push this file to your repository, Qovery automatically deploys your application."),Object(o.b)("h2",{id:"git-driven-infrastructure-gitops"},"Git Driven Infrastructure (GitOps)"),Object(o.b)("p",null,"Qovery automatically manages your application and everything it needs to run. That means you treat your infrastructure dependencies as a part of your application.\nIf your application needs a PostgreSQL database, all you need to do is to edit the configuration file, commit and push your changes:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),'application:\n  name: myapp\n  project: test\n  region: "aws/us-west-2"\ndatabases:\n- type: postgresql\n  version: "11.5"\n  name: my-postgresql\n')),Object(o.b)("p",null,"TODO - IMAGE - GIT REPO -> DOCKERFILE + CONFIG FILE -> APPLICATION + DATABASE DEPLOYED"),Object(o.b)("p",null,"It means you keep your infrastructure needs under version-control as a part of your application."),Object(o.b)("h2",{id:"rich-selection-of-integrated-services"},"Rich selection of integrated services"),Object(o.b)("p",null,"Qovery integrates, provisions, and manages all kinds of services and infrastructure dependencies your application may need. We provide a rich selection of services\nthat you can use in your application just by adding a few lines to your config file."),Object(o.b)("table",null,Object(o.b)("thead",{parentName:"table"},Object(o.b)("tr",{parentName:"thead"},Object(o.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Services"),Object(o.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Examples"))),Object(o.b)("tbody",{parentName:"table"},Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Databases"),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"SQL, NoSQL databases and caches")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Brokers"),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Message queuing systems")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Storages"),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Data storage e.g., S3")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Network"),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Custom DNS, SSL/TLS")))),Object(o.b)("p",null,"TODO - IMAGE - DATABAES & OTHER SERVICES LOGOS"),Object(o.b)("p",null,"After you define your needs in the configuration file, Qovery provides all the required infrastructure. Since now, all you need to do is to implement your business features!"),Object(o.b)("h2",{id:"all-languages-and-frameworks-supported"},"All languages and frameworks supported"),Object(o.b)("p",null,"To make Qovery flexible and efficient, we decided to use containers as a runtime for applications. Due to this fact, Qovery can run any software you need.\nThe only thing you need to do to run your applications on Qovery is to provide a Dockerfile in your application repository."),Object(o.b)("p",null,"TODO - IMAGE - APPS & FRAMEWORKS LOGOS"),Object(o.b)("h2",{id:"consistent-development-environment"},"Consistent development environment"),Object(o.b)("p",null,"At Qovery, we believe your application should behave the same on your local machine as in your production environment. We can achieve this\nusing Docker runtime and ",Object(o.b)("strong",{parentName:"p"},"Qovery CLI")," features that automagically run your application on your machine in the same way as it runs in production."),Object(o.b)("p",null,"TODO - IMAGE - LOCAL APP == DEPLOYED APP"))}s.isMDXComponent=!0},252:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return m}));var a=n(0),r=n.n(a);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=r.a.createContext({}),s=function(e){var t=r.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):c({},t,{},e)),n},u=function(e){var t=s(e.components);return r.a.createElement(p.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},d=Object(a.forwardRef)((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=s(n),d=a,m=u["".concat(i,".").concat(d)]||u[d]||b[d]||o;return n?r.a.createElement(m,c({ref:t},p,{components:n})):r.a.createElement(m,c({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var p=2;p<o;p++)i[p]=n[p];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);