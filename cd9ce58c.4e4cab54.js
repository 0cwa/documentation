/*! For license information please see cd9ce58c.4e4cab54.js.LICENSE.txt */
(window.webpackJsonp=window.webpackJsonp||[]).push([[96],{246:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return s})),a.d(t,"metadata",(function(){return u})),a.d(t,"rightToc",(function(){return b})),a.d(t,"default",(function(){return d}));var n=a(1),r=a(9),o=(a(0),a(271)),i=a(272),c=a(278),l=a(284),p=a(280),s={last_modified_on:"2020-05-08",$schema:"/.meta/.schemas/guides.json",title:"Migrating application from Heroku to Qovery",description:"Tutorial how to migrate a webapp connected to PostgreSQL database from Heroku to Qovery",author_github:"https://github.com/pjeziorowski",tags:["type: tutorial"],hide_pagination:!0},u={categories:[{name:"tutorial",title:"Tutorial",description:"Simple step-by-step tutorials.",permalink:"/guides/tutorial"}],coverLabel:"Migrating application from Heroku to Qovery",description:"Tutorial how to migrate a webapp connected to PostgreSQL database from Heroku to Qovery",permalink:"/guides/tutorial/migrate-webapp-from-heroku-to-qovery",readingTime:"6 min read",source:"@site/guides/tutorial/migrate-webapp-from-heroku-to-qovery.md",tags:[{label:"type: tutorial",permalink:"/guides/tags/type-tutorial"}],title:"Migrating application from Heroku to Qovery",truncated:!1,prevItem:{title:"Managing env variables",permalink:"/guides/advanced/managing-environment-variables"},nextItem:{title:"The easiest way to deploy microservices",permalink:"/guides/tutorial/the-easiest-way-to-deploy-microservices"}},b=[{value:"Deploying the sample application to Heroku",id:"deploying-the-sample-application-to-heroku",children:[]},{value:"Migrating the application from Heroku to Qovery",id:"migrating-the-application-from-heroku-to-qovery",children:[{value:"Dockerize the application",id:"dockerize-the-application",children:[]},{value:"Initialize Qovery",id:"initialize-qovery",children:[]},{value:"Deploy the application to Qovery",id:"deploy-the-application-to-qovery",children:[]},{value:"Migrate PostgreSQL data",id:"migrate-postgresql-data",children:[]}]}],m={rightToc:b};function d(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(n.a)({},m,a,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"This tutorial describes how to migrate your web application running on Heroku to Qovery. In the article, you learn how to\nmigrate a Node.js application connected to Heroku Postgres as a backing service on the Heroku platform. It covers all required\nsteps you need to take to deploy your application on Qovery and transfer your data from Heroku Postgres to the database managed\nby Qovery."),Object(o.b)("p",null,"The application is a simple Node.js ",Object(o.b)("em",{parentName:"p"},"Todo")," web app that uses PostgreSQL as a persistence layer."),Object(o.b)(p.a,{name:"guide",mdxType:"Assumptions"},Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"You are familiar with Heroku basics, have a Heroku account and access to Heroku CLI"),Object(o.b)("li",{parentName:"ul"},"You have a Qovery account and access to Qovery CLI"),Object(o.b)("li",{parentName:"ul"},"You have a ",Object(o.b)("a",Object(n.a)({parentName:"li"},{href:"https://github.com"}),"Github")," account")),Object(o.b)("p",null,"If you have not installed the Qovery CLI yet, you can see steps to do it ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/using-qovery/interface/cli/#first-usage"}),"here"),".")),Object(o.b)("h2",{id:"deploying-the-sample-application-to-heroku"},"Deploying the sample application to Heroku"),Object(o.b)(l.a,{headingDepth:3,mdxType:"Steps"},Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Log in to Heroku using the CLI:"),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"heroku login --interactive\n"))),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Clone the application repository:"),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"git clone https://github.com/qovery/migrate-webapp-from-heroku-to-qovery.git\n"))),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Move to the directory of the cloned repository:"),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"cd migrate-webapp-from-heroku-to-qovery\n")),Object(o.b)("p",{parentName:"li"},"The repository is made of a few simple components:"),Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"index.js")," - Node.js script for setting up the web application."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"package.json")," - File determining app's dependencies."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"Procfile")," - File required to run the app on Heroku. It determines the command executed on the application startup."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"views")," - Directory with the HTML served by the app."))),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Create a Heroku app:"),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"heroku create\n"))),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Add Heroku PostgreSQL to your application:"),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"heroku addons:create heroku-postgresql:hobby-dev\n"))),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Deploy the application:"),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(n.a)({parentName:"pre"},{}),"git push heroku master\n"))),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Check your application URL:"),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"heroku info\n"))),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"In the browser, navigate to your application's URL - you'll see a simple view with a ",Object(o.b)("em",{parentName:"p"},"Todo")," app:"),Object(o.b)("p",{align:"center"},Object(o.b)("img",{src:"/img/todo-app-example.png",alt:"Connect Github"}))),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Create a few ",Object(o.b)("em",{parentName:"p"},"Todo")," tasks in the UI to make sure you have sample data in the database.")))),Object(o.b)("h2",{id:"migrating-the-application-from-heroku-to-qovery"},"Migrating the application from Heroku to Qovery"),Object(o.b)("h3",{id:"dockerize-the-application"},"Dockerize the application"),Object(o.b)("p",null,"As Qovery uses Docker for the runtime of applications, you need first to Dockerize the application. To do so,\ncreate a file named ",Object(o.b)("inlineCode",{parentName:"p"},"Dockerfile")," in the root of application repository with the following content:"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-dockerfile",metastring:'title="Dockerfile"',title:'"Dockerfile"'}),'FROM node:10-alpine\nWORKDIR /app\nCOPY package*.json ./\nRUN npm install\nCOPY . /app\nEXPOSE 8080\nCMD ["npm", "start"]\n')),Object(o.b)("p",null,"If you want to learn more about Docker, you can read our introductory article:"),Object(o.b)(c.a,{to:"/guides/tutorial/how-to-deploy-a-docker-container/",mdxType:"Jump"},"Docker Containers"),Object(o.b)("h3",{id:"initialize-qovery"},"Initialize Qovery"),Object(o.b)("p",null,"To set up the application for Qovery deployment with a PostgreSQL database, create a ",Object(o.b)("inlineCode",{parentName:"p"},".qovery.yml")," file in the root of the project with the following content:"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-yml",metastring:'title=".qovery.yml"',title:'".qovery.yml"'}),'application:\n  name: node-todo-app\n  project: migrate-from-heroku\n  cloud_region: aws/eu-west-3\n  publicly_accessible: true\ndatabases:\n- type: postgresql\n  version: "11.5"\n  name: my-postgresql-database\nrouters:\n- name: main\n  routes:\n  - application_name: node-todo-app\n    paths:\n    - /\n')),Object(o.b)(i.a,{mdxType:"Alert"},Object(o.b)("p",null,"For your future projects, you can use the ",Object(o.b)("inlineCode",{parentName:"p"},"qovery init")," command instead to configure your application.")),Object(o.b)("p",null,"The application uses ",Object(o.b)("inlineCode",{parentName:"p"},"DATABASE_URL")," environment variable to connect to PostgreSQL. To provide your app\nwith correct database URL, create a ",Object(o.b)("inlineCode",{parentName:"p"},".env")," file in the root of application repository with this content:"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-plain",metastring:'title=".env"',title:'".env"'}),"DATABASE_URL=$QOVERY_DATABASE_MY_POSTGRESQL_DATABASE_CONNECTION_URI\n")),Object(o.b)("p",null,"Adding this file populates the ",Object(o.b)("inlineCode",{parentName:"p"},"DATABASE_URL")," environment variable (that is consumed often on Heroku)\nwith database URL provided by Qovery."),Object(o.b)("h3",{id:"deploy-the-application-to-qovery"},"Deploy the application to Qovery"),Object(o.b)("p",null,"All you need to do to deploy the application to Qovery is to commit and push a repository containing ",Object(o.b)("inlineCode",{parentName:"p"},"Dockerfile")," and ",Object(o.b)("inlineCode",{parentName:"p"},".qovery.yml")," to Github.\nQovery needs access to this repository to build and deploy the application."),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/new"}),"Create a Github repository"))),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Remove current git configuration from the repository you cloned:"))),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"rm -rf .git\n")),Object(o.b)("ol",{start:3},Object(o.b)("li",{parentName:"ol"},"Initialize a new repository and commit all files:")),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{}),'git init\ngit add .\ngit commit -m "Deploying to Qovery"\n')),Object(o.b)("ol",{start:4},Object(o.b)("li",{parentName:"ol"},"Push the local repository to the newly created Github repo (replace placeholders in the code below):")),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"git remote add origin https://github.com/$YOUR_NAME/$YOUR_REPOSITORY_NAME.git\ngit push -u origin master\n")),Object(o.b)("p",null,"Good job! It's all you need to do to deploy your application with a database to Qovery.\nTo confirm that your application is, in fact, deploying, run ",Object(o.b)("inlineCode",{parentName:"p"},"qovery status"),"."),Object(o.b)("p",null,"The output of the above command could look like this:"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash",metastring:'title="Output"',title:'"Output"'}),"BRANCH NAME       | STATUS  | ENDPOINTS                                   | APPLICATIONS    | DATABASES\nmaster            | running | https:/your.app.url.qovery.io               | node-todo-app   | my-postgresql-database\n\nAPPLICATION NAME  | STATUS  | DATABASES\nnode-todo-app     | running | my-postgresql-database\n\nDATABASE NAME            | STATUS  | TYPE         | VERSION  | ENDPOINT | PORT     | USERNAME | PASSWORD | APPLICATIONS\nmy-postgresql-database   | running | POSTGRESQL   | 11.5     | <hidden> | <hidden> | <hidden> | <hidden> | node-todo-app\n")),Object(o.b)("p",null,"The application should be deployed in a few minutes. When it's status is ",Object(o.b)("inlineCode",{parentName:"p"},"running"),", open the browser\nusing address specified in the ",Object(o.b)("inlineCode",{parentName:"p"},"ENDPOINTS")," section of ",Object(o.b)("inlineCode",{parentName:"p"},"qovery status")," output."),Object(o.b)("p",null,"You should see the same application you previously deployed to Heroku, yet without ",Object(o.b)("em",{parentName:"p"},"Todo")," tasks you have added before."),Object(o.b)("h3",{id:"migrate-postgresql-data"},"Migrate PostgreSQL data"),Object(o.b)("p",null,"There are multiple paths you could take to migrate your data from Heroku Postgres to Qovery.\nFor production usage for the shortest downtime you would probably want to configure Qovery PostgreSQL as a replica to\nthe database on Heroku, and making it the primary instance after migration. Heroku does not support this in its free\ntier, so for the purpose of the example, we take a simpler path and use different tools to migrate the data."),Object(o.b)(i.a,{mdxType:"Alert"},Object(o.b)("p",null,"To run the migration successfully, you need a ",Object(o.b)("inlineCode",{parentName:"p"},"psql")," PostgreSQL client installed on your machine.")),Object(o.b)("p",null,"First, dump the data from your Heroku Postgres:"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"heroku pg:backups:download -a YOUR_APPLICATION_NAME\nheroku pg:backups:capture -a YOUR_APPLICATION_NAME\n")),Object(o.b)("p",null,"It results in creating a new ",Object(o.b)("inlineCode",{parentName:"p"},"latest.dump")," file, which you use to transfer data to Qovery."),Object(o.b)("p",null,"To migrate the data to Qovery, run (replace all placeholders with values you get from running ",Object(o.b)("inlineCode",{parentName:"p"},"qovery application env list -c"),"):"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"pg_restore -v -h $DATABASE_HOST -U $DATABASE_USER -d postgres latest.dump --no-owner\n")),Object(o.b)("p",null,"In the browser, navigate to your application URL deployed on Qovery. You'll see all tasks you have previously added to the application hosted on Heroku. Well done!"))}d.isMDXComponent=!0},270:function(e,t,a){var n;!function(){"use strict";var a={}.hasOwnProperty;function r(){for(var e=[],t=0;t<arguments.length;t++){var n=arguments[t];if(n){var o=typeof n;if("string"===o||"number"===o)e.push(n);else if(Array.isArray(n)&&n.length){var i=r.apply(null,n);i&&e.push(i)}else if("object"===o)for(var c in n)a.call(n,c)&&n[c]&&e.push(c)}}return e.join(" ")}e.exports?(r.default=r,e.exports=r):void 0===(n=function(){return r}.apply(t,[]))||(e.exports=n)}()},271:function(e,t,a){"use strict";a.d(t,"a",(function(){return u})),a.d(t,"b",(function(){return d}));var n=a(0),r=a.n(n);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function c(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=r.a.createContext({}),s=function(e){var t=r.a.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):c({},t,{},e)),a},u=function(e){var t=s(e.components);return r.a.createElement(p.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},m=Object(n.forwardRef)((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,i=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=s(a),m=n,d=u["".concat(i,".").concat(m)]||u[m]||b[m]||o;return a?r.a.createElement(d,c({ref:t},p,{components:a})):r.a.createElement(d,c({ref:t},p))}));function d(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,i=new Array(o);i[0]=m;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:n,i[1]=c;for(var p=2;p<o;p++)i[p]=a[p];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,a)}m.displayName="MDXCreateElement"},272:function(e,t,a){"use strict";a(275);var n=a(0),r=a.n(n),o=a(270),i=a.n(o);a(131);t.a=function(e){var t=e.children,a=e.classNames,n=e.fill,o=e.icon,c=e.type,l=null;switch(c){case"danger":l="alert-triangle";break;case"success":l="check-circle";break;case"warning":l="alert-triangle";break;default:l="info"}return r.a.createElement("div",{className:i()(a,"alert","alert--"+c,{"alert--fill":n,"alert--icon":!1!==o}),role:"alert"},!1!==o&&r.a.createElement("i",{className:i()("feather","icon-"+(o||l))}),t)}},273:function(e,t,a){"use strict";var n=a(1),r=a(0),o=a.n(r),i=a(39),c=a(279),l=a(28),p=a.n(l);t.a=function(e){var t,a=e.to,l=e.href,s=a||l,u=Object(c.a)(s),b=Object(r.useRef)(!1),m=p.a.canUseIntersectionObserver;return Object(r.useEffect)((function(){return!m&&u&&window.docusaurus.prefetch(s),function(){m&&t&&t.disconnect()}}),[s,m,u]),s&&u?o.a.createElement(i.b,Object(n.a)({},e,{onMouseEnter:function(){b.current||(window.docusaurus.preload(s),b.current=!0)},innerRef:function(e){var a,n;m&&e&&u&&(a=e,n=function(){window.docusaurus.prefetch(s)},(t=new window.IntersectionObserver((function(e){e.forEach((function(e){a===e.target&&(e.isIntersecting||e.intersectionRatio>0)&&(t.unobserve(a),t.disconnect(),n())}))}))).observe(a))},to:s})):o.a.createElement("a",Object(n.a)({},e,{href:s}))}},275:function(e,t,a){var n=a(12);n(n.P,"Array",{fill:a(276)}),a(75)("fill")},276:function(e,t,a){"use strict";var n=a(25),r=a(76),o=a(24);e.exports=function(e){for(var t=n(this),a=o(t.length),i=arguments.length,c=r(i>1?arguments[1]:void 0,a),l=i>2?arguments[2]:void 0,p=void 0===l?a:r(l,a);p>c;)t[c++]=e;return t}},277:function(e,t,a){var n=a(26).f,r=Function.prototype,o=/^\s*function ([^ (]*)/;"name"in r||a(10)&&n(r,"name",{configurable:!0,get:function(){try{return(""+this).match(o)[1]}catch(e){return""}}})},278:function(e,t,a){"use strict";var n=a(0),r=a.n(n),o=a(273),i=a(270),c=a.n(i);a(132);t.a=function(e){var t=e.children,a=e.className,n=e.badge,i=e.leftIcon,l=e.rightIcon,p=e.size,s=e.target,u=e.to,b=c()("jump-to","jump-to--"+p,a),m=r.a.createElement("div",{className:"jump-to--inner"},r.a.createElement("div",{className:"jump-to--inner-2"},i&&r.a.createElement("div",{className:"jump-to--left"},r.a.createElement("i",{className:"feather icon-"+i})),r.a.createElement("div",{className:"jump-to--main"},n?r.a.createElement("span",{className:"badge badge--primary badge--right"},n):"",t),r.a.createElement("div",{className:"jump-to--right"},r.a.createElement("i",{className:"feather icon-"+(l||"chevron-right")+" arrow"}))));return s?r.a.createElement("a",{href:u,target:s,className:b},m):r.a.createElement(o.a,{to:u,className:b},m)}},279:function(e,t,a){"use strict";function n(e){return!1===/^(https?:|\/\/)/.test(e)}a.d(t,"a",(function(){return n}))},280:function(e,t,a){"use strict";a(277);var n=a(0),r=a.n(n),o=a(272);t.a=function(e){var t=e.children,a=e.name;return r.a.createElement(o.a,{type:"info",fill:!0,icon:!1,rounded:!0,className:"list--icons list--icons--arrow list--tight list--indent margin-bottom--lg"},r.a.createElement("p",{class:"text--lg margin-bottom--sm",style:{marginTop:"-0.25em"}},"Before you begin, this ",a||"page"," assumes the following:"),t)}},281:function(e,t,a){"use strict";var n=a(286),r=a(53);function o(e,t){return t.encode?t.strict?n(e):encodeURIComponent(e):e}t.extract=function(e){return e.split("?")[1]||""},t.parse=function(e,t){var a=function(e){var t;switch(e.arrayFormat){case"index":return function(e,a,n){t=/\[(\d*)\]$/.exec(e),e=e.replace(/\[\d*\]$/,""),t?(void 0===n[e]&&(n[e]={}),n[e][t[1]]=a):n[e]=a};case"bracket":return function(e,a,n){t=/(\[\])$/.exec(e),e=e.replace(/\[\]$/,""),t?void 0!==n[e]?n[e]=[].concat(n[e],a):n[e]=[a]:n[e]=a};default:return function(e,t,a){void 0!==a[e]?a[e]=[].concat(a[e],t):a[e]=t}}}(t=r({arrayFormat:"none"},t)),n=Object.create(null);return"string"!=typeof e?n:(e=e.trim().replace(/^(\?|#|&)/,""))?(e.split("&").forEach((function(e){var t=e.replace(/\+/g," ").split("="),r=t.shift(),o=t.length>0?t.join("="):void 0;o=void 0===o?null:decodeURIComponent(o),a(decodeURIComponent(r),o,n)})),Object.keys(n).sort().reduce((function(e,t){var a=n[t];return Boolean(a)&&"object"==typeof a&&!Array.isArray(a)?e[t]=function e(t){return Array.isArray(t)?t.sort():"object"==typeof t?e(Object.keys(t)).sort((function(e,t){return Number(e)-Number(t)})).map((function(e){return t[e]})):t}(a):e[t]=a,e}),Object.create(null))):n},t.stringify=function(e,t){var a=function(e){switch(e.arrayFormat){case"index":return function(t,a,n){return null===a?[o(t,e),"[",n,"]"].join(""):[o(t,e),"[",o(n,e),"]=",o(a,e)].join("")};case"bracket":return function(t,a){return null===a?o(t,e):[o(t,e),"[]=",o(a,e)].join("")};default:return function(t,a){return null===a?o(t,e):[o(t,e),"=",o(a,e)].join("")}}}(t=r({encode:!0,strict:!0,arrayFormat:"none"},t));return e?Object.keys(e).sort().map((function(n){var r=e[n];if(void 0===r)return"";if(null===r)return o(n,t);if(Array.isArray(r)){var i=[];return r.slice().forEach((function(e){void 0!==e&&i.push(a(n,e,i.length))})),i.join("&")}return o(n,t)+"="+o(r,t)})).filter((function(e){return e.length>0})).join("&"):""}},284:function(e,t,a){"use strict";var n=a(0),r=a.n(n),o=(a(270),a(281)),i=a.n(o);a(133);t.a=function(e){var t=e.children,a=e.headingDepth,o=e.hideFeedbackQuestion,c="undefined"!=typeof window?window.location:null,l={title:"Tutorial on "+c+" failed",body:"The tutorial on:\n\n"+c+"\n\nHere's what went wrong:\n\n\x3c!-- Insert command output and details. Thank you for reporting! :) --\x3e"},p="https://github.com/qovery/documentation/issues/new?"+i.a.stringify(l),s=Object(n.useState)(null),u=s[0],b=s[1];return r.a.createElement("div",{className:"steps steps--h"+a},t,!o&&!u&&r.a.createElement("div",{className:"steps--feedback"},"How was it? Did this tutorial work?\xa0\xa0",r.a.createElement("span",{className:"button button--sm button--primary",onClick:function(){return b("yes")}},"Yes"),"\xa0\xa0",r.a.createElement("a",{href:p,target:"_blank",className:"button button--sm button--primary"},"No")),"yes"==u&&r.a.createElement("div",{className:"steps--feedback steps--feedback--success"},"Thanks! If you're enjoying Qovery please consider ",r.a.createElement("a",{href:"https://github.com/qovery/documentation/",target:"_blank"},"starring our Github repo"),"."))}},286:function(e,t,a){"use strict";e.exports=function(e){return encodeURIComponent(e).replace(/[!'()*]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}))}}}]);