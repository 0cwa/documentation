---
title: Configuration
description: Configuring Qovery
---

This section covers configuring Qovery and creating pipelines like the
[example below](#example). Qovery's configuration uses the [TOML][urls.toml]
syntax, and the configuration file must be passed via the
[`--config` flag][docs.process-management#flags] when
[starting][docs.process-management#starting] Qovery:

```bash
qovery --config /etc/qovery/qovery.toml
```

## Example

```toml title="qovery.toml"
<%= File.read("#{Dir.pwd}/../config/examples/docs_example.toml") %>
```

The key thing to notice above is the use of the `inputs` option. This connects
Qovery's component to create a pipeline. For a simple introduction, please
refer to the:

<Jump to="[[[guides.getting-started.your-first-pipeline]]]">Getting Started Guide</Jump>

## Reference

Qovery provides a [full reference][docs.reference] that you can use to build
your configuration files.

<Jump to="/docs/reference/sources/">Sources</Jump>
<Jump to="/docs/reference/transforms/">Transforms</Jump>
<Jump to="/docs/reference/sinks/">Sinks</Jump>

And for more advanced techniques:

<Jump to="/docs/reference/env-vars/">Env Vars</Jump>
<Jump to="/docs/reference/global-options/">Global options</Jump>
<Jump to="/docs/reference/templating/">Templating</Jump>
<Jump to="/docs/reference/tests/">Tests</Jump>

## How It Works [[sort]]

### Config File Location

The location of your Qovery configuration file depends on your [installation
method][docs.installation]. For most Linux based systems the file can be
found at `/etc/qovery/qovery.toml`.

### Environment Variables

Qovery will interpolate environment variables within your configuration file
with the following syntax:

```toml title="qovery.toml"
[transforms.add_host]
  type = "add_fields"

  [transforms.add_host.fields]
    host = "${HOSTNAME}"
    environment = "${ENV:-development}" # default value when not present
```

<Alert type="info">

Interpolation is done before parsing the configuration file. As such, the
entire `${ENV_VAR}` variable will be replaced, hence the requirement of
quotes around the definition.

</Alert>

Please refer to the [environment variables reference][docs.reference.env-vars]
for more info.

### Templating

Select configuration options support Qovery's
[templating syntax][docs.reference.templating] to produce dynamic values derived
from the event's data. Two syntaxes are supported for fields that support field
interpolation:

1. [Strptime specifiers][urls.strptime_specifiers]. Ex: `date=%Y/%m/%d`
2. [Event fields][docs.data-model]. Ex: `{{ field_name }}`

For example:

```toml title="qovery.toml"
[sinks.es_cluster]
  type  = "elasticsearch"
  index = "user-{{ user_id }}-%Y-%m-%d"
```

The above `index` value will be calculated for _each_ event. For example, given
the following event:

```json
{
  "timestamp": "2019-05-02T00:23:22Z",
  "message": "message",
  "user_id": 2
}
```

The `index` value will result in:

```toml
index = "user-2-2019-05-02"
```

Learn more in the [templating reference][docs.reference.templating].

### Multiple config files

You can pass multiple configuration files when starting Qovery:

```bash
qovery --config qovery1.toml --config qovery2.toml
```

Or use a [globbing syntax][urls.globbing]:

```bash
qovery --config /etc/qovery/*.toml
```

### Syntax

The Qovery configuration file follows the [TOML][urls.toml] syntax for it's
simplicity, explicitness, and relaxed white-space parsing. For more information,
please refer to the [TOML documentation][urls.toml].

### Types

All TOML values types are supported. For convenience this includes:

* [Strings](https://github.com/toml-lang/toml#string)
* [Integers](https://github.com/toml-lang/toml#integer)
* [Floats](https://github.com/toml-lang/toml#float)
* [Booleans](https://github.com/toml-lang/toml#boolean)
* [Offset Date-Times](https://github.com/toml-lang/toml#offset-date-time)
* [Local Date-Times](https://github.com/toml-lang/toml#local-date-time)
* [Local Dates](https://github.com/toml-lang/toml#local-date)
* [Local Times](https://github.com/toml-lang/toml#local-time)
* [Arrays](https://github.com/toml-lang/toml#array)
* [Tables](https://github.com/toml-lang/toml#table)
