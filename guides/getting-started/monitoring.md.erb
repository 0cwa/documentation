---
$schema: "/.meta/.schemas/guides.json"
title: Monitoring Qovery
description: How to monitoring and observe Qovery in production
series_position: 4
author_github: https://github.com/binarylogic
tags: ["type: guide", "domain: observability"]
---

Now that you've deployed Qovery you'll want to make sure it's healthy and
performing. This guide will cover how to monitor and observe Qovery.

## Metrics

<Alert type="info">

Internal observability of Qovery is being _actively_ developed and is on our
[1.0 roadmap][urls.qovery_roadmap]. You can expect a new `internal_metrics`
[source][docs.sources] that will allow you to run internal Qovery metrics
through a Qovery pipeline.

</Alert>

## Logs

Qovery writes all logs to `STDOUT`, accessing these logs is dependent on how
you installed Qovery.

<%= interfaces_logs(metadata.installation.interfaces_list, size: "lg") %>

## What To Expect

How Qovery performs is largely dependent on your configuration, hardware,
data shape, and volume. No two deployments perform the same! With that said,
Qovery should perform well in most cases. The following sections provide general
references points for what you can expect in production.

### Benchmarks

Our [performance benchmarks][urls.qovery_performance] are the best point of
reference when understanding how Qovery performs. This data should give you a
general idea of Qovery's performance under different scenarios.

### Throughput

Qovery should be relatively high throughput. One a 4 core machine should produce
throughput between 20mb/s to 100mb/s depending on your data and configuration.

### CPU

Qovery is mostly CPU bound and benefits from more cores and CPU efficient
machines.

### Memory

Qovery should use very little memory. For average pipelines Qovery uses around
200mb, but this can vary widely dependind on your configuraton.
