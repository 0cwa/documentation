---
title: <%= dbName %>
description: "How to use <%= dbName %>"
---
<%= dbDescription %>

## Add a database to your application

To add a dedicated <%= dbName %> instance to your existing application, simply add these lines to your configuration file:

```yml title=".qovery.yml" {4-6}
application:
...
databases:
- type: <%= dbId %>
  version: "latest"
  name: my-<%= dbId %>
```

- name: select a name for your database
- version: choose the version of the database
- type: the database engine (<%= dbId %> in this case)

Alternatively, if you are creating a new application, use `qovery init` to interactively add a database (the CLI asks if you need one).

## Get access to a database

To get the connection information of your database, you can use the CLI:

```bash
qovery application env list -c
```

```plain title="OUTPUT"
$ qovery application env list -c
  SCOPE       | KEY                                                           | VALUE     
--------------+---------------------------------------------------------------+-----------
  BUILT_IN    | QOVERY_BRANCH_NAME                                            | master    
  BUILT_IN    | QOVERY_IS_PRODUCTION                                          | true      
  BUILT_IN    | QOVERY_DATABASE_MY_<%= dbId.upcase %>_NAME                               | my-<%= dbId %>
  BUILT_IN    | QOVERY_DATABASE_MY_<%= dbId.upcase %>_TYPE                               | <%= dbId %>     
  BUILT_IN    | QOVERY_DATABASE_MY_<%= dbId.upcase %>_VERSION                            | 3.6       
  BUILT_IN    | QOVERY_DATABASE_MY_<%= dbId.upcase %>_CONNECTION_URI                     | <hidden>  
  BUILT_IN    | QOVERY_DATABASE_MY_<%= dbId.upcase %>_CONNECTION_URI_WITHOUT_CREDENTIALS | <hidden>  
  BUILT_IN    | QOVERY_DATABASE_MY_<%= dbId.upcase %>_HOST                               | <hidden>  
  BUILT_IN    | QOVERY_DATABASE_MY_<%= dbId.upcase %>_FQDN                               | <hidden>  
  BUILT_IN    | QOVERY_DATABASE_MY_<%= dbId.upcase %>_PORT                               | <hidden>  
  BUILT_IN    | QOVERY_DATABASE_MY_<%= dbId.upcase %>_USERNAME                           | <hidden>  
  BUILT_IN    | QOVERY_DATABASE_MY_<%= dbId.upcase %>_PASSWORD                           | <hidden>  
  BUILT_IN    | QOVERY_DATABASE_MY_<%= dbId.upcase %>_DATABASE                           | <%= dbId %> 
```

In the output, you get all data you need to use the database. Those environment variables are available in the runtime of your application.
<% if dbSpecificAlert %>
<Alert type="warning">
<%= dbSpecificAlert %>
</Alert>
<% end %>
## Get database status

To know more about your database status, run:

```bash
qovery status -c
```

```plain title="OUTPUT"
DATABASE NAME | STATUS  | TYPE    | VERSION | ENDPOINT | PORT     | USERNAME | PASSWORD | APPLICATIONS    
----------------+---------+---------+---------+----------+----------+----------+----------+-----------------
  my-mongo      | running | <%= dbId %> | 3.6     | <hidden> | <hidden> | <hidden> | <hidden> | simple-example 
```

## Delete a database

To delete a database, you have two options:
- Remove it from the configuration file, commit and push
- If you worked on a feature branch, delete the branch, and the database instance automatically deletes as well

<Alert type="danger">

Delete action drops the service and its data!

</Alert>

<Alert type="info">

Backups are kept for 1 month if you need to recover.

</Alert>

## Backups


<Alert>

By default, backups are made daily between 1h and 5h.

</Alert>

You can change the window very easily (use 24h format):

```yml title=".qovery.yml" {6}
application:
  ...
databases:
  - name: my-<%= dbId %>
    type: <%= dbId %>
    backup-window: 21-23
```

As described in the configuration file, the backup occurs between 9 PM and 11 PM.