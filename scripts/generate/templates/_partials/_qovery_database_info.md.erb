---
title: <%= dbName %>
description: "How to set up and use a <%= dbName %> database"
---
<%= dbDescription %>

<Alert type="info">

Check out [this video guide][guides.getting-started.create-a-database] to create and deploy your first database

</Alert>

## Create a <%= dbName %> database

TODO

## Add a <%= dbName %> database to your application

To add a dedicated <%= dbName %> instance to your existing application, simply add these lines to your configuration file:

```yml title=".qovery.yml" {4-6}
application:
...
databases:
- type: <%= dbId %>
  version: <%= versions[0] %>
  name: my-<%= dbId %>
```

- name: select a name for your database
- version: choose the version of the database
- type: the database engine (<%= dbId %> in this case)

## Supported versions

Here are the <%= dbName %> versions supported by Qovery.

|Version|Supported|
|---------|-------|
<% versions.each do |version| %> | <%= version %> | Yes |
<% end %>

Qovery does not support a new version of <%= dbName %> yet? [Contact us][urls.qovery_chat]

## Get access to your <%= dbName %> database

To get the connection information of your database, you can use the CLI:

```bash
qovery application env list -c
```

```plain title="OUTPUT"
$ qovery application env list -c
  SCOPE       | KEY                                                           | VALUE
--------------+---------------------------------------------------------------+-----------
  BUILT_IN    | QOVERY_BRANCH_NAME                                            | master
  BUILT_IN    | QOVERY_IS_PRODUCTION                                          | true
  BUILT_IN    | QOVERY_DATABASE_MY_<%= dbId.upcase %>_NAME                               | my-<%= dbId %>
  BUILT_IN    | QOVERY_DATABASE_MY_<%= dbId.upcase %>_TYPE                               | <%= dbId %>
  BUILT_IN    | QOVERY_DATABASE_MY_<%= dbId.upcase %>_VERSION                            | <%= versions[0] %>
  BUILT_IN    | QOVERY_DATABASE_MY_<%= dbId.upcase %>_CONNECTION_URI                     | <hidden>
  BUILT_IN    | QOVERY_DATABASE_MY_<%= dbId.upcase %>_CONNECTION_URI_WITHOUT_CREDENTIALS | <hidden>
  BUILT_IN    | QOVERY_DATABASE_MY_<%= dbId.upcase %>_HOST                               | <hidden>
  BUILT_IN    | QOVERY_DATABASE_MY_<%= dbId.upcase %>_FQDN                               | <hidden>
  BUILT_IN    | QOVERY_DATABASE_MY_<%= dbId.upcase %>_PORT                               | <hidden>
  BUILT_IN    | QOVERY_DATABASE_MY_<%= dbId.upcase %>_USERNAME                           | <hidden>
  BUILT_IN    | QOVERY_DATABASE_MY_<%= dbId.upcase %>_PASSWORD                           | <hidden>
  BUILT_IN    | QOVERY_DATABASE_MY_<%= dbId.upcase %>_DATABASE                           | <%= dbId %>
```

In the output, you get all data you need to use the database. Those environment variables are available in the runtime of your application.
<% if dbSpecificAlert %>
<Alert type="warning">
<%= dbSpecificAlert %>
</Alert>
<% end %>

## Show <%= dbName %> database status

To know more about your database status, run:

```bash
qovery status -c
```

```plain title="OUTPUT"
DATABASE NAME | STATUS  | TYPE    | VERSION | ENDPOINT | PORT     | USERNAME | PASSWORD | APPLICATIONS
----------------+---------+---------+---------+----------+----------+----------+----------+-----------------
  my-mongo      | running | <%= dbId %> | <%= versions[0] %>     | <hidden> | <hidden> | <hidden> | <hidden> | simple-example
```

## Delete your <%= dbName %> database

<Alert type="danger">

Delete action drops the service and its data!

</Alert>

To delete a database, you have to:

- Remove it from the configuration file, commit and push.
- Delete it manually (for security purpose) through the [Qovery web interface][urls.start_qovery].

<Alert type="info">

Backups from production environments are kept for 1 month if you need to recover.

</Alert>

## <%= dbName %> backup

Daily backups for your <%= dbName %> database are automatically done for databases in managed mode.
