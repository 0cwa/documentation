---
$schema: "/.meta/.schemas/guides.json"
title: How to deploy a full-stack application composed of Hasura, PostgreSQL and Angular
description: State of the art full-stack application deployment with Qovery
author_github: https://github.com/evoxmusic
tags: ["type: tutorial", "framework: hasura", "language: javascript", "database: postgresql"]
hide_pagination: true
---
import Steps from '@site/src/components/Steps';
import Alert from '@site/src/components/Alert';
import Assumptions from '@site/src/components/Assumptions';

In this article, I will show you how to deploy a full-stack application with Angular for the frontend, with Hasura and [PostgreSQL][urls.postgresql] for the backend.
In the end, our application will be available within development and production environments, which makes it convenient to make code changes without putting down the production.

<p align="center">
  <img src="/img/deploy-fullstack-application-composed-of-hasura-postgresql-angular/fullstack_with_background.jpg" alt="Full-stack application Hasura, Angular and PostgreSQL with Qovery" />
</p>

<!---
<Alert type="success">

This week the Qovery team was presenting at the [Hasura Con 2020](https://hasura.io/events/hasura-con-2020/talks/blazing-fast-deployment-of-a-fullstack-angular-GraphQL-hasura-app-with-qovery) - *How to deploy a full-stack application composed of Hasura, PostgreSQL, and Angular with Qovery*. At the bottom of this article, you will find the recorded video and the resources links.

</Alert>
--->

To show all of that, we will create a food application to find out the best Parisian restaurants.

## What is...

### Hasura

[Hasura][urls.hasura] is a Turnkey [GraphQL API][urls.graphql] backend - Meaning, you don't need to write any code to have a ready GraphQL API. Hasura stores all the data into a PostgreSQL database. What's interesting, is that Hasura manages the database for you, all the setup is done automatically. Hasura is extensible and lets you integrate with your other applications, through a well-designed hook system (Actions/Events).

<p align="center">
  <img src="/img/deploy-fullstack-application-composed-of-hasura-postgresql-angular/hasura-graphic.jpg" alt="Hasura Graphic" />
</p>

### PostgreSQL

[PostgreSQL][urls.postgresql] is one of the most famous open-source SQL database - very useful for storing application data efficiently. It will be used by Hasura behind the scene to store the data.

### Angular

You may have already heard about [Angular][urls.angular]. It is one of the most popular JavaScript frameworks, that developers use to build dynamic websites. We will use it to display the raw data from our GraphQL API made with Hasura.

### Qovery

[Qovery][urls.qovery] is a Container as a Service platform that helps developers deploy their applications in the Cloud in just a few seconds. Qovery is designed to deploy stateless and stateful applications - like [databases][docs.database], and [storage][docs.storage]. And all of this, on any Cloud providers; More specifically AWS (Amazon Web Services), GCP (Google Cloud Platform), and Azure (Microsoft Cloud).

<p align="center">
  <img src="/img/deploy-fullstack-application-composed-of-hasura-postgresql-angular/qovery_with_background.jpg" alt="Qovery integrated with gitlab, github and bitbucket. And integrated with the Cloud providers" />
</p>

### Full-stack application
A full-stack application refers to multiple applications working all-together as a single one. From frontend (customer or user-facing) to the backend (the "behind-the-scenes" technology such as databases and internal architecture) and the software code that connects the two (middleware). In our case, our backend is Hasura, our database PostgreSQL and our frontend Angular. From the application user point of view, this is seen as a single application.

# Tutorial

<Assumptions>

* You host your code on [Github][urls.github], [Gitlab][urls.gitlab] or [Bitbucket][urls.bitbucket]
* You have signed up to [Qovery][urls.start_qovery]

</Assumptions>

## Hasura and PostgreSQL

### Quick deployment

To deploy Hasura to Qovery, follow steps from [this guide][guides.tutorial.graphql-api-with-hasura#hasura-deployment-on-qovery].

### Hasura web interface
Once the Hasura application and the PostgreSQL database running, we can get access to the Hasura web interface to set-up our GraphQL API.

<p align="center">
  <img src="/img/deploy-fullstack-application-composed-of-hasura-postgresql-angular/hasura_web_interface.png" alt="Hasura web interface to configure the data model" />
</p>

<%= qovery_open_app() %>

## Angular

### GraphQL client
<Assumptions>

* You have installed the [angular CLI](https://cli.angular.io)

</Assumptions>

Ok, now let's deploy our Angular application. We need to use a GraphQL client to connect to our server. We'll use [Apollo](https://www.apollographql.com) by running in our shell:

```bash
$ ng add apollo-angular
```

Then, we link the client to our server by modifying the *uri* variable into `src/app/graphql.module.ts`:
```javascript title="src/app/graphql.module.ts"
//...
const uri = "https://api.tld.com";
//...
```
You can find the correct URL in Hasura application Environment Variable section ([learn more about env variables][docs.configuration.environment-variable]).

Finally, we can now fetch data from our GraphQL backend with the following code:

```javascript
import { Apollo } from "apollo-angular";
//...
export class HomeComponent implements OnInit {
	//...
    ngOnInit() {
      const gquery = "..."; // graphql query
      this.apollo.query<any>({query: gquery}).subscribe(({ data, loading }) => {
          // response with the data...
      });
    }
    //...
}
```

### Quick deployment

<Steps headingDepth={3}>

<ol>

<li>

Create a Github or Gitlab repository with the sample code

</li>

<li>

Add a new application linked to your repository. If you don't know how to create a new app, [check our guide][guides.getting-started.deploy-your-first-application#step-by-step-tutorial].

</li>

<%= qovery_deploy_app() %>

</ol>
</Steps>

## Demo
Now, let's look at the final result...

<div class="video-container">
  <p align="center">
    <iframe width="800" height="600" src="https://www.youtube.com/embed/nmtLfzSDlPM" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen>
    </iframe>
  </p>
</div>

## Beyond application deployment
Application deployment is one part of what Qovery provides. Qovery helps development teams to better collaborate altogether by cloning [environment][docs.environment] and creating ephemeral environments on Pull Requests. Plus, deploying on its own Cloud account is available for business plans - and last, but not least, a [web interface][docs.web-interface] will be available very soon.

## Wrapping-up
In this tutorial, we saw how to deploy a full-stack application composed of a frontend, backend, and a database. We saw how Qovery perfectly fits Hasura and make it publicly available in a couple of seconds. So [join us on Qovery][urls.start_qovery] to deploy your next full-stack project :)

**Resources**
* [Angular](https://angular.io/)
* [Hasura](https://hasura.io/)
* [PostgreSQL](https://www.postgresql.org/)
* [Angular - Material Design](https://material.angular.io/)

<Jump to="/guides/tutorial/">Tutorial</Jump>
